
***********************************************************************
*** PLEASE BE PATIENT: Drupal WxT may take a few minutes to install ***
***********************************************************************

Pre-Requisites:

* Azure Blob Storage
* Minio is installed in cluster
* Patch to wxt_ext_migrate => wxt_file migration

1. Get the Drupal URL:

{{- if contains "LoadBalancer" .Values.nginx.serviceType }}

  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        Watch the status with: 'kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "drupal.fullname" . }}'

  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "drupal.fullname" . }}-nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

  echo http://$SERVICE_IP/

{{- else if contains "ClusterIP"  .Values.nginx.serviceType }}

  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ template "drupal.fullname" . }},tier=frontend" -o jsonpath="{.items[0].metadata.name}")

  kubectl port-forward $POD_NAME 8080:80

{{- end }}

{{- if contains "NodePort" .Values.nginx.serviceType }}

  Or running:

  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "drupal.fullname" . }})-nginx

  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")

  echo http://$NODE_IP:$NODE_PORT/

{{- end }}

2. Run the site installation through Drush

  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ template "drupal.fullname" . }},tier=drupal" -o jsonpath="{.items[0].metadata.name}")

  # Drupal Site installation
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush si wxt \
    --sites-subdir=default \
    --db-url=mysql://root:{{ .Values.mysql.password }}@{{ template "drupal.fullname" . }}-mysql:3306/{{ .Values.mysql.db }} \
    --account-name=admin \
    --account-pass={{ .Values.drupal.password }} \
    --site-mail=admin@example.com \
    --site-name="Drupal Install Profile (WxT)" \
    install_configure_form.update_status_module='array(FALSE,FALSE)' \
    --yes

  # Install S3FS for WxT
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush en wxt_ext_s3fs -y

  # Perms
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- chown -R root:www-data /var/www/html/sites/default/files
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush cr

  # Only if s3fs is not properly configured so stateful assets work across nginx + php-fpm
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush -y config-set system.performance css.preprocess 0
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush -y config-set system.performance js.preprocess 0

  # Baseline migrations for Canada.ca
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush migrate:import wxt_file
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush s3fs-refresh-cache
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush migrate:import --group wxt --tag 'Core'
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush migrate:import --group gcweb --tag 'Core'
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush migrate:import --group gcweb --tag 'Menu'

  # Group migration
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush migrate:import --group gcweb --tag 'Menu'
  kubectl exec -it $POD_NAME -n {{ .Release.Namespace }} -- drush php-eval 'node_access_rebuild();'

3. Login with the following credentials

  echo Username: {{ .Values.drupal.username }}
  echo Password: $(kubectl get secret --namespace {{ .Release.Namespace }} {{ template "drupal.fullname" . }} -o jsonpath="{.data.password}" | base64 --decode)
