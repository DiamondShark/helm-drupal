apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "drupal.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "drupal.name" . }}
    helm.sh/chart: {{ include "drupal.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "drupal.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      tier: drupal
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "drupal.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        tier: drupal
    spec:
      containers:
      - image: "{{ .Values.drupal.image }}:{{ default .Chart.AppVersion .Values.drupal.tag }}"
        imagePullPolicy: {{ default "" .Values.drupal.imagePullPolicy | quote }}
        name: drupal
        lifecycle:
          postStart:
            exec:
              command: ["/bin/bash", "-c", "cd / && ./minio {{ .Values.minio.hostname }}"]
{{- if .Values.drupal.healthcheck.enabled }}
        livenessProbe:
          exec:
            command:
              - php-fpm-healthcheck
          initialDelaySeconds: 0
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
              - php-fpm-healthcheck
          initialDelaySeconds: 1
          periodSeconds: 5
{{- end  }}
        env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              # This is not ideal, but calling {{ include "mysql.secretName" . }}
              # was returning the wrong result.
              name: "{{ .Release.Name }}-mysql"
              key: mysql-password
{{- if .Values.extraVars }}
{{ toYaml .Values.extraVars | indent 8 }}
{{- end }}
        ports:
        - containerPort: 9000
          name: tcp-php-fpm
          protocol: TCP
        volumeMounts:
{{- if (eq "d7" .Values.drupal.version) }}
        - name: cm-drupal
          mountPath: /var/www/html/sites/default/settings.php
          subPath: d7.settings.php
          readOnly: true
{{- else }}
        - name: cm-drupal
          mountPath: /var/www/html/sites/default/settings.php
          subPath: d8.settings.php
          readOnly: true
{{- end }}
        - name: cm-drupal
          mountPath: /var/www/html/sites/default/extra.settings.php
          subPath: extra.settings.php
          optional: true
          readOnly: true
        - name: cm-minio
          mountPath: /minio
          subPath: minio
          readOnly: true
      {{- if .Values.drupal.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.drupal.imagePullSecrets | indent 8 }}
      {{- end }}
      # Allow non-root user to access PersistentVolume
      securityContext:
        fsGroup: {{ .Values.drupal.securityContext.fsGroup }}
      volumes:
      - name: cm-drupal
        configMap:
          name: {{ include "drupal.fullname" . }}
      - name: cm-minio
        configMap:
          defaultMode: 0777
          name: {{ include "drupal.fullname" . }}-minio
